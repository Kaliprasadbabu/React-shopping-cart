14-11-2023:(React Style and Class binding)
Summary - Databinding

- One Way Binding
- Two Way Binding


                               Style Binding
- Style Binding is the process of binding CSS attributes to any JSX element dynamically.
- It is required to change appearence of element dynamically.

JavaScript Style Binding:

    <input type="text"  id="UserName">

    document.getElementById("UserName").style.cssAttribute = "value";

    CSS => background-color  => backgroundColor
        =>  font-style => fontStyle

React Style Binding:

    <input type="text"  style={ {attributeName:value, attributeName:value} } />

    <input type="text"  style="color:red" />               => invalid
    <input type="text"  style={ {color: 'red'} } />            => valid

Ex:
style-binding.jsx


export function StyleBinding()
{
    return(
        <div className="container-fluid">
            <h2>Style Binding</h2>
           <input type="text" style={{border:'2px solid red', boxShadow:'2px 2px 2px red'}} />
        </div>
    )
}

Note: Style attribute value must be always string type.
      Style attributes are defined as JavaScript object.

Ex:
style-binding.jsx

import { useState } from "react"

export function StyleBinding()
{
    const [validationStyle, setValidationStyle] = useState({border:'', boxShadow:''});
    const [displayStyle, setDisplayStyle] = useState({display:'none'});

    function handleNameChange(e){
        if(e.target.value.length<4) {
            setValidationStyle({
                border : '2px solid red',
                boxShadow: '2px 2px 2px red'
            })
        } else {
            setValidationStyle({
                border: '2px solid green',
                boxShadow: '2px 2px 2px green'
            })
        }
    }

    function handleCheckboxChange(e){
        if(e.target.checked) {
            setDisplayStyle({
                display: 'block'
            })
        } else {
            setDisplayStyle({
                display: 'none'
            })
        }
    }

    return(
        <div className="container-fluid">
            <h2>Style Binding</h2>
            <dl>
                <dt>User Name</dt>
                <dd><input type="text" style={validationStyle} onChange={handleNameChange} placeholder="Name Min 4 Chars" /></dd>
                <dt>Terms of Service</dt>
                <dd>
                    <textarea disabled>Our terms of service</textarea>
                </dd>
                <dd>
                    <input type="checkbox" onChange={handleCheckboxChange} /> <label>I Accept</label>
                </dd>
                <dd>
                    <button style={displayStyle}>Submit</button>
                </dd>
            </dl>
        </div>
    )
}

FAQ: What is issue with style binding?
Ans : Style is inline and it is good for individual elements.
     It is not good for reusability across elements.
     It is not good for configuring multiple effects for element.


                        Class Binding
- It is the process of binding a CSS class dynamically to any JSX element.
- It allows to configure multiple styles simultaneously at the same time.
- A class is configure to JSX element by using "className".

Syntax:
       <div  className={ dynamicValue } />
   
         dynamicValue = "class1  class2  class3.."

Ex:
class-binding.css

.dark-theme {
    background-color: black;
    color:white;
    padding: 20px;
}


form {
    border:1px solid gray;
    padding: 10px;
    border-radius: 20px;
}

class-binding.jsx

import { useState } from "react";
import "./class-binding.css";

export function ClassBinding()
{
    const [theme, setTheme] = useState('w-25');

    function handleThemeChange(e){
        if(e.target.checked) {
            setTheme('dark-theme w-25');
        } else {
            setTheme('w-25');
        }
    }

    return (
        <div className="container-fluid d-flex justify-content-center align-items-center" style={{height:'100vh'}}>
            <form className={theme}>
                <div className="form-switch">
                 <input type="checkbox" onChange={handleThemeChange} className="form-check-input" /> <label className="form-check-label">Dark Mode</label>
                </div>
                <h2 className="bi bi-person-fill"> User Login </h2>
                <dl>
                    <dt>User Name</dt>
                    <dd><input type="text" className="form-control" /></dd>
                    <dt>Password</dt>
                    <dd><input type="password" className="form-control" /></dd>
                </dl>
                <button className="btn btn-dark w-100">Login</button>
            </form>
        </div>
    )
}


Ex: Bootstrap Classes

import { useState } from "react";


export function ClassBinding()
{
    const [theme, setTheme] = useState('w-25');
    const [buttonStyle, setButtonStyle] = useState('btn btn-dark w-100');

    function handleThemeChange(e){
        if(e.target.checked) {
            setTheme('bg-dark text-white p-2 w-25 border border-2 rounded');
            setButtonStyle('btn btn-light w-100');
        } else {
            setTheme('w-25');
            setButtonStyle('btn btn-dark w-100');
        }
    }

    return (
        <div className="container-fluid d-flex justify-content-center align-items-center" style={{height:'100vh'}}>
            <form className={theme}>
                <div className="form-switch">
                 <input type="checkbox" onChange={handleThemeChange} className="form-check-input" /> <label className="form-check-label">Dark Mode</label>
                </div>
                <h2 className="bi bi-person-fill"> User Login </h2>
                <dl>
                    <dt>User Name</dt>
                    <dd><input type="text" className="form-control" /></dd>
                    <dt>Password</dt>
                    <dd><input type="password" className="form-control" /></dd>
                </dl>
                <button className={buttonStyle}>Login</button>
            </form>
        </div>
    )
}

Ex: Changing Bootstrap Icon using class binding

class-binding.jsx

import { useState } from "react";


export function ClassBinding()
{
    const [sortClass, setSortClass] = useState('bi bi-sort-alpha-down btn btn-danger');

    function handleSortClick(){
        setSortClass((sortClass=='bi bi-sort-alpha-down btn btn-danger')?'bi bi-sort-alpha-up btn btn-danger':'bi bi-sort-alpha-down btn btn-danger');
    }

    return (
        <div className="container-fluid d-flex justify-content-center align-items-center" style={{height:'100vh'}}>
            <button onClick={handleSortClick} className={sortClass}></button>
        </div>
    )
}