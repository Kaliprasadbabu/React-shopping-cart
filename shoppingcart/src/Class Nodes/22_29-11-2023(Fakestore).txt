29-11-2023(Fakestore)
XMLHttpRequest
jquery ajax
fetch
axios

                        fakestoreapi.com

Request Method        Route                        Description
-----------------------------------------------------------------------------------------------------
GET                 /products                            It returns an array of                                                         products. [ ]

GET                /products/1                        It returns specific product
                                                that matches given id. { }

GET                /products/categories                It returns all categories. [ ]


GET                /products/category/electronics        It returns an array of all
                                                products belong to specific
                                                category.

API Data in Fakestore:

    {
      id:number,
      title:string,
      image:string,
      price:number,
      category:string,
      description:string,
      rating: {rate:number, count:number}
    }

FAQ: How you can know about the keys in any unknown object?
Ans:  
    a) Object.keys()  => returns the array of all keys in object
       
        Syntax:        []
              Object.keys(objectName).map(function(key){
                    typeof  objectName[key]
              })
   
    b) for..in iterator

        Syntax:
               for(var property in object)
               {
               }

Note: You can use Web Debuggers to test and explore API requests.
            a) postman
            b) fiddler
            c) swagger etc..

Ex:
<script>
    fetch("http://fakestoreapi.com/products/1&quot;)
    .then(res=> res.json())
    .then(product => {
        Object.keys(product).map(key=>{
             document.write(`${key} : ${typeof product[key]}<br>`);
             
        })
        Object.keys(product.rating).map(key=> {
                document.write(key + "<br>");
             })
    })
</script>


Ex:
Fakestore.jsx

import { useEffect, useState } from "react"
import axios from "axios";

export function Fakestore(){

    const [categories, setCategories] = useState([]);
    const [products, setProducts] = useState([{id:0, title:'', description:'', price:0, image:'', category:'', rating:{rate:0, count:0}}]);
    const [cartItems] = useState([]);

    function LoadCategories(){
        axios.get("http://fakestoreapi.com/products/categories&quot;)
        .then(response=> {
            response.data.unshift("all");
            setCategories(response.data);
        })
    }

    function LoadProducts(url){
        axios.get(url)
        .then(response=> {
            setProducts(response.data);
        })
    }

    useEffect(()=>{
        LoadCategories();
        LoadProducts("http://fakestoreapi.com/products&quot;);
       
    },[]);

    function handleCategoryChange(e){
        if(e.target.value=="all") {
             LoadProducts("http://fakestoreapi.com/products&quot;);
        } else {
            LoadProducts(`http://fakestoreapi.com/products/category/${e.target.value}`);
        }
    }
   

    function handleAddClick(e){
        axios.get(`http://fakestoreapi.com/products/${e.target.name}`)
        .then(response => {
            cartItems.push(response.data);
            alert(`${response.data.title}\nAdded To Cart`);
           
         
        })
    }

    return(
        <div className="container-fluid">
            <header className="d-flex bg-dark text-white justify-content-between p-3">
                <div className="h3">Fakestore.</div>
                <div className="fs-4">
                    <span className="me-4"><a>Home</a></span>
                    <span className="me-4"><a>Jewelery</a></span>
                    <span className="me-4"><a>Electronics</a></span>
                </div>
                <div className="fs-4">
                    <button className="bi btn btn-light bi-cart4 position-relative">
                     <span className="badge position-absolute rounded rounded-circle bg-danger text-white">0</span>
                    </button>
                </div>
            </header>
            <section className="mt-3 row">
                <nav className="col-2">
                  <div className="mt-4">
                    <label className="fw-bold form-label">Select Category</label>
                    <div>
                        <select onChange={handleCategoryChange} className="form-select">
                            {
                                categories.map(category=>
                                    <option value={category} key={category}> {category.toUpperCase()} </option>
                                    )
                            }
                        </select>
                    </div>
                  </div>
                </nav>
                <main className="col-10 overflow-auto" style={{height:'500px' , display:'flex', flexWrap:'wrap'}}>
                    {
                        products.map(product=>
                             <div className="card p-2 m-2" key={product.id} style={{width:'200px'}}>
                                <img src={product.image} className="card-img-top" height="120" />
                                <div className="card-header" style={{height:'120px'}}>
                                    <p>
                                        {product.title}
                                    </p>
                                </div>
                                <div className="card-body">
                                    <dl>
                                        <dt>Price</dt>
                                        <dd>{product.price}</dd>
                                        <dt>Rating</dt>
                                        <dd>
                                            {product.rating.rate} <span className="bi bi-star-fill text-success"></span>
                                        </dd>
                                    </dl>
                                </div>
                                <div className="card-footer">
                                    <button name={product.id} onClick={handleAddClick} className="btn btn-dark w-100 bi bi-cart3"> Add to Cart</button>
                                </div>
                             </div>
                            )
                    }
                </main>
            </section>
        </div>
    )
}