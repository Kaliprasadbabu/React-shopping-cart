25-11-2023:(API Communication)
Form Events
- These are the events defined for <form> element.
- These events will fireup only with generic buttons, submit & reset.

        onSubmit
        onReset

Syntax:
    <form  onSubmit={handleSubmit}  onReset={handleReset}>

        <button type="submit"> Submit </button>
        <button type="reset"> Cancel </button>

    </form>

Ex:
import { useState } from "react"

export function TimeoutDemo()
{
    function handleSubmit(e){
        e.preventDefault();
        alert('Form submit to Server');
    }
   
    return(
        <div className="container-fluid">
           <form onSubmit={handleSubmit}>
              <h2>Register User</h2>
              <dl>
                <dt>User Name</dt>
                <dd><input type="text" name="UserName"/></dd>
              </dl>
              <button>Submit</button>
           </form>
        </div>
    )
}

Summary - Events:
1. Mouse
2. Keyboard
3. Button
4. Element State
5. Touch
6. Clipboard
7. Form
8. Timer etc..


                              Data from API
Distributed Computing
- Distributed computing allows 2 different applications running on 2 different mechines to share information.
- It also allows 2 different objects running in 2 different process on same mechine to share information.
- There are various distributed computing technologies used by different languages

CORBA    Common Object Request Broken Architecture    14 languages, C++, Java
DCOM    Distribute Component Object Model            Visual Basic
RMI        Remote Method Invocation                    J2EE
EJB        Enterprise Java Beans                        Java
Web Service                                        All technologies
Remoting                                            .NET

Web Service Specifications:

a) SOAP
b) REST
c) JSON


SOAP
- Service Oriented Architecture Protocol
- Consumer Sends XML request
- Provider Sends XML response

    <Products>
        <Product>
        <Category>Electronics</Category>
        </Product>
    </Products>

REST
- Representational State Transfer
- Consumer Sends a query request
- Provider Sends XML response optionally JSON.

        ?category=electronics


JSON
- JavaScript Object Notation
- Consumer sends JSON request
- Providers sends JSON response

        {
          "Category" : "Electronics"
        }

- API is Application Programming Interface, that allows data to reach every device.
- JavaScript based technologies can use various techniques for handling communication with API requests.

                XMLHttpRequest  object
                fetch() promise
                jQuery Ajax methods
                3rd Party libraries, axios, whatwgFetch etc..

Ex:
1. Go to public folder and add

        product.json

{
    "title": "APPLE iPhone 14 (Blue, 128 GB)",
    "price": 60999,
    "rating": {"rate":4.6, "count": 3500, "reviews": 600},
    "image": "iblue.jpg",
    "features": [
        "Bank Offer10% off on Axis Bank Credit Card EMI Transactions, up to ₹1,000 on orders of ₹5,000 and aboveT&C",
        "Bank Offer10% off on Flipkart Axis Bank Credit Card EMI Transactions, up to ₹1000 on orders of ₹5000 and aboveT&C",
        "Bank Offer10% off on Citi Credit Card EMI Transactions, up to ₹1,000 on orders of ₹5,000 and aboveT&C",
        "Special PriceGet extra ₹8901 off (price inclusive of cashback/coupon)T&C"
    ]
}

2. Add a component

   flipkart.jsx

import { useEffect, useState } from "react"

export function Flipkart(){

    const [product, setProduct]= useState({title:'', price:0, image:'',rating:{rate:0, count:0, reviews:0}, features:[]});

    useEffect(()=>{

        var http = new XMLHttpRequest();
        http.open("get", "product.json",true);
        http.send();
        http.onreadystatechange = function(){
            if(http.readyState==4){
                setProduct(JSON.parse(http.responseText));
            }
        }

    },[]);

    return(
        <div className="container-fluid">
            <div className="mt-4 row">
                <div className="col-4">
                    <img src={product.image} />
                </div>
                <div className="col-8">
                    <h3 className="text-primary">{product.title}</h3>
                    <div>
                        <span className="badge bg-success">{product.rating.rate} <span className="bi bi-star-fill"></span> </span>
                        <span className="fw-bold ms-3 text-secondary">{product.rating.count} Ratings & {product.rating.reviews} Reviews</span>
                    </div>
                    <div className="mt-4">
                       <ul className="list-unstyled">
                            {
                                product.features.map(feature=>
                                    <li key={feature} className="bi mb-3 bi-tag-fill"> <span>{feature}</span> </li>
                                    )
                            }
                       </ul>
                    </div>
                </div>
            </div>
        </div>
    )
}