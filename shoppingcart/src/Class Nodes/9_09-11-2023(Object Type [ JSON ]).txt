09-11-2023:(Object Type [ JSON ])
Object Type [ JSON ]

- It is a key | value collection.
- Key is string type
- Value can be any type.

    var  product = { Id:1,  Name:"TV",  InStock:true, Cities:["Delhi", "Hyd"], {Rate:4.3, Count:3400} };


    <p> Name :  { product.Name } </p>

Ex:
data-binding.jsx

export function DataBinding()
{
    var product = {
        Name: "Samsung TV",
        Price: 45000.33,
        Stock: true,
        Cities: ["Delhi", "Hyd"],
        Rating: {Rate:3.5, Count:5000}
    }

    return(
        <>
          <h2>Product Details</h2>
          <dl>
            <dt>Name</dt>
            <dd>{product.Name}</dd>
            <dt>Price</dt>
            <dd>{product.Price}</dd>
            <dt>Stock</dt>
            <dd>{(product.Stock==true)?"Available":"Out of Stock"}</dd>
            <dt>Shipped To</dt>
            <dd>
                <ol>
                    {
                        product.Cities.map(city=>
                            <li key={city}>{city}</li>
                            )
                    }
                </ol>
            </dd>
            <dt>Rating</dt>
            <dd>
                {product.Rating.Rate} <span className="bi bi-star-fill text-success"></span> [{product.Rating.Count}]
            </dd>
          </dl>
        </>
    )
}

FAQ's:
1. What is difference between Object and Map type?
A.
    Object                                    Map
    ---------------------------------------------------------------------------------------------------------
    Key and Value collection                    Key and Value collection

    Key can be only string type                Key can be any type

    Value can any type                        Value can be any type

    It requires explicit operators, properties        It provides several implicit
    and methods to manipulate.                properties and method to manipulate.

    It is slow.                                It is fast.

    It is structured.                            It is schema less.

2. How to remove a key from object?
A. By using delete operator

    delete  product.Price;

3. How to verify a key?
A. By using "in" operator.

4. How to access all keys?
A. By using "Object.keys()", or  "for..in" iterator

5. What are the various Map members?
A.
    set()            Add a new key and value
    get()            To access a value with reference of key
    keys()        Returns all keys
    values()        Returns all values
    has()        Returns true if specified key exits
    delete()        Removes a value with reference of key
    clear()        Removes all keys and values
    entries()        Return all keys and values  
    size            Returns the total count of keys.

Ex:
data-binding.jsx


export function DataBinding()
{
    var product = {
        Name: "Samsung TV",
        Price: 45000.33,
        Stock: "true"
    };


    return(
        <>
           <h2>Product Details</h2>
           {
              Object.keys(product).map(key =>
                 <p>{key} : {product[key]} </p>
                )
           }
        </>
    )
}

Array of Objects:

data-binding.jsx

export function DataBinding()
{
    var menu = [
        {Category: "Electronics", Products:["Televisions", "Mobiles", "Watches"]},
        {Category: "Fashion", Products: ["Men Fashion", "Kids Fashion", "Women Fashion"]}
    ];

    return(
        <>
          <ol>
              {
                 menu.map(item=>
                    <li key={item.Category}>{item.Category}
                       <ul>
                           {
                              item.Products.map(product =>
                                 <li key={product}>{product}</li>
                                )
                           }
                       </ul>
                    </li>
                    )
              }
          </ol>
        </>
    )
}

Ex: Data List

data-binding.jsx

import React from "react";

export function DataBinding()
{
    var topics = [
         {Title: "HTML", Description: "It is a markup language."},
         {Title: "CSS", Description: "It configure styles for HTML."}
    ];

    return(
        <>
          <dl>
             {
                topics.map(topic=>
                      <React.Fragment key={topic.Title} >
                      <dt key={topic.Title}>{topic.Title}</dt>
                      <dd key={topic.Description}>{topic.Description}</dd>
                      </React.Fragment>
                    )
             }
          </dl>
        </>
    )
}

Ex: Tabular Data

data-binding.jsx

import React from "react";

export function DataBinding()
{
    var iccTable = [
        {Team: "India", Matches: 8, Won: 8, Lost: 0, PTS: 16, NRR: "+2.456", Flag:"india.jpg"},
        {Team: "South Africa", Matches: 8, Won:6, Lost:2, PTS: 12, NRR: "+1.376", Flag:"sf.jpg"},
        {Team: "Australia", Matches: 8, Won: 6, Lost: 2, PTS: 12, NRR: "+0.861", Flag:"aust.jpg"},
    ]

    return(
        <>
         <h1>ICC Worlcup 2023 Table</h1>
         <table className="table w-50 table-hover table-striped">
             <thead>
                <tr>
                    <th>Team</th>
                    <th>Matches</th>
                    <th>Won</th>
                    <th>Lost</th>
                    <th>PTS</th>
                    <th>NRR</th>
                </tr>
             </thead>
             <tbody>
                {
                    iccTable.map(country =>
                        <tr key={country.Team}>
                            <td> <img src={country.Flag} width="40" /> {country.Team}</td>
                            <td>{country.Matches}</td>
                            <td>{country.Won}</td>
                            <td>{country.Lost}</td>
                            <td>{country.PTS}</td>
                            <td>{country.NRR}</td>
                        </tr>
                        )
                }
             </tbody>
         </table>
        </>
    )
}

Ex: Flipkart

data-binding.jsx

import React from "react";

export function DataBinding()
{
    var mobiles = [
        {Title: "APPLE iPhone 14 (Blue, 128 GB)", Price: 57999, Rating: 4.6, Features: ["128 GB ROM", "15.49 cm (6.1 inch) Super Retina XDR Display", "12MP + 12MP | 12MP Front Camera", "A15 Bionic Chip, 6 Core Processor Processor", "1 Year Warranty for Phone and 6 Months Warranty for In-Box Accessories"], Photo:"iblue.jpg"},
        {Title: "APPLE iPhone 14 (Starlight, 128 GB)", Price: 57999, Rating: 4.6, Features: ["128 GB ROM", "15.49 cm (6.1 inch) Super Retina XDR Display", "12MP + 12MP | 12MP Front Camera", "A15 Bionic Chip, 6 Core Processor Processor", "1 Year Warranty for Phone and 6 Months Warranty for In-Box Accessories"], Photo:"starlight.jpg"}
    ]
   
    return(
        <>
            {
                mobiles.map(item =>
                     <div key={item.Title} className="row p-2 m-2">
                        <div className="col-2">
                            <img  src={item.Photo} width="110%" />
                        </div>
                        <div className="col-7">
                            <div className="h4 text-primary">{item.Title}</div>
                            <div className="bg-success rounded rounded-pill p-1 text-center text-white" style={{width:'70px'}}>{item.Rating} <span className="bi bi-star-fill text-white"></span> </div>
                            <div className="mt-3">
                                <ul>
                                    {
                                        item.Features.map(feature =>
                                             <li key={feature}>{feature}</li>
                                            )
                                    }
                                </ul>
                            </div>
                        </div>
                        <div className="col-3">
                            <div className="h1">{item.Price.toLocaleString('en-in', {style: 'currency', currency: 'INR'})}</div>
                        </div>
                     </div>

                    )
            }
        </>
    )
}